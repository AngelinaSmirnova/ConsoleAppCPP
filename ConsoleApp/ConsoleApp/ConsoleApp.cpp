#include <iostream>//Заголовочный файл, который управляет стандартным потоком ввлда-вывода информации
#include <math.h>//Заголовычный файл, который управляет матаматичским функциями
#include <fstream>//Заголовычный файл, который управляет взаимодействием работы с файлами
#include <string>//Заголовычный файл, который управляет string-ым типом
#include "AlgorithmOfEquation.h"//Заголовочный файл, для использования методов из класса AlgorithmOfEquation
using namespace std;//Использование компилятором стандартное пространнство имен
AlgorithmOfEquation alg;//создаем обект класса AlgorithmOfEquation
int InputInt(string message)//Объявляем функцию проверки ввода значений типа int
{
    while (true)//цикл продолжается до тех пор, пока пользователь не введет корректное значение
    {
        cout << message;//выводим сообщение для пользователя
        int result;//переменная для ввода значения
        cin >> result;//ввод значения переменной
        //Проверка на предыдущее извлечение
        if (cin.fail())//если предыдущее извлечение оказалось неудачным,
        {
            cin.clear();//то возвращаем cin в 'обычный' режим работы
            cin.ignore(32767, '\n');//и удаляем значения предыдущего ввода из входного буфера
            cout << "Ошибка ввода, попробуйте снова!\n";//выводим сообщение об ошибке ввода
        }
        else//иначе ввод прошёл успешно
        {
            cin.ignore(32767, '\n');//удаляем лишние значения
            return result;//возвращаем результат
        }
    }
}
float InputFloat(string message)//Объявляем функцию проверки ввода значений типа float
{
    while (true)//цикл продолжается до тех пор, пока пользователь не введет корректное значение
    {
        cout << message;//выводим сообщение для пользователя
        float result;//переменная для ввода значения
        cin >> result;//ввод значения переменной
        //Проверка на предыдущее извлечение
        if (cin.fail())//если предыдущее извлечение оказалось неудачным,
        {
            cin.clear();//то возвращаем cin в 'обычный' режим работы
            cin.ignore(32767, '\n');//и удаляем значения предыдущего ввода из входного буфера
            //выводим сообщение об ошибке ввода
            cout << "Ошибка ввода, попробуйте снова!\n"<<
                "Помните в консоли не целые числа считываются через '.'\n";
        }
        else//иначе ввод прошёл успешно
        {
            cin.ignore(32767, '\n');//удаляем лишние значения
            return result;//возвращаем результат
        }
    }
}
int main()//Главная функция входа программы
{
    setlocale(LC_ALL, "RUSSIAN");//Функция для чтения и вывода русского языка в консоль
    int exit = -1, i = 0;//переменные для выхода и цикла
    int number = -1;//переменная номера уравнения
    int file = -1;//переменная для проверки ввода данных из файла
    float a = 0, b = 0, c = 0;//коэффициенты уравнения
    float x0 = 0, xn = 0;// вычисляемые приближения для корня
    float start = 0, end = 0, eps = 0;// границы отрезка и необходимая точность
    string message;//переменная для передачи сообщения в функцию проверки
    ifstream f1;//переменная для открытия и проверки файла
    do//цикл работы программы
    {
        i = 0;//переменная для цикла
        //вывод данных в консоль
        cout << "Программа решения уравнений методом Ньютона!" << endl
            << "Возможны решение следующих уравнений!" << endl
            << "№1: a * x^3 + b * x + c" << endl
            << "№2: a * sin(x + b) + c" << endl
            << "№3: a * ln|x + b| + c" << endl;
        cout << "\nХотите загрузить данные из файла?" << endl;
        while (true)//цикл проверки ввода значения типа bool в int-ой интерпретации
        {
            if (file == 0 || file == 1) break;//условие остановки цикла
            //если введено непривильное значение
            else file = InputInt("Введите '1' для загрузки файла и '0' чтобы ввести данные самостоятельно: ");
        }
        if (file == 1)//условие для ввода данных из файла
        {
            //вывод данных в консоль
            cout << "\nУчтите, что в файле должны быть данные в следующем формате:" << endl
                << "номер уравнения, коээфициент а, коээфициент b, коээфициент c," << endl <<
                "начальная точка интервала, конечная точка интервала, точность вычисления" << endl
                << "Например, текст файла: 1 5 5 5 -5 10 0.00001" << endl
                << "А сам файл формата .txt!\n";
            string fileName;//переменная для пути к файлу
            while (true)//цикл проверки открытия файла
            {
                cout << "Введите путь к файлу: ";//вывод данных в консоль
                cin >> fileName;//ввод пути к файлу
                f1.open(fileName);//открываем файл по заданному пути
                if (!(f1.is_open()))//если файл не открылся
                {
                    //выводим сообщение об ошибке
                    cout << "Файл не открывается!\nМожет вы ошиблись при вводе пути к файлу!\n"
                        << "А может ошиблись форматом? Файл точно в формате .txt?\n";
                }
                else break;//иначе выходим из цикла
            }
            ifstream fin(fileName);//чтение из файла
            cout << "\nПроцесс пошёл!\n";//вывод данных в консоль
            //Обработка данных из файла
            fin >> number;//чтение из файла переменной номера уравнения
            fin >> a;//чтение из файла переменной коэффициента а
            fin >> b;//чтение из файла переменной коэффициента b
            fin >> c;//чтение из файла переменной коэффициента с
            fin >> start;//чтение из файла переменной начальной точки интервала
            fin >> end;//чтение из файла переменной конечной точки интервала
            fin >> eps;//чтение из файла переменной точнности вычисления
            //вывод данных в консоль
            cout << "Программа считала из файла следующие переменные:\n"
                << "Номер уравнения: " << number << endl
                << "Коэффициент а: " << a << endl
                << "Коэффициент b: " << b << endl
                << "Коэффициент с: " << c << endl
                << "Начальная точка интервала: " << start << endl
                << "Конечная точка интервала: " << end << endl
                << "Точность вычисления: " << eps << endl;
            cout << "Процесс закончен!\n\n";
        }
        else if (file == 0)//условие для ввода данных из консоли
        {
            while (true)//циел проверки введенного номера уравнения
            {
                //условие выхода из цикла
                if (number == 1 || number == 2 || number == 3) break;
                //иначе снова вызываем функцию для ввода значения
                else number = InputInt("\nВведите номер уравнения: ");
            }
            cout << "\nВведите коэффициенты уравнения:\n";//вывод данных в консоль
            a = InputFloat("a = ");//вызов функции для ввода переменной
            b = InputFloat("b = ");//вызов функции для ввода переменной
            c = InputFloat("c = ");//вызов функции для ввода переменной
            cout << "\nВведите интервал поиска корня [a ; b]\n";//вывод данных в консоль
            start = InputFloat("Начальная точка интервала: ");//вызов функции для ввода переменной
            end = InputFloat("Конечная точка интервала: ");//вызов функции для ввода переменной
            while (true)//цикл для проверки введенной точности вычисления
            {
                //условие выхода из цикла
                if (eps > 0 && eps <= 1) break;
                //иначе снова вызываем функцию для ввода значения
                else eps = InputFloat("\nВведите точность вычисления: ");
            }
            cout << endl;//конец строки в консоль
        }
        if (start > end)//если пользователь перепутал границы отрезка, меняем их местами
        {
            x0 = start;//3-ей переменной присваиваем введенной начальное значение интервала
            start = end;//переменной начала интервала присваиваем конец интервала
            end = x0;//переменной конца интервала присваиваем значение 3-ей переменной
        }
        //вызываем функцию для решения уравнения
        alg.Algorithm(number, i, start, end, eps, x0, xn, a, b, c);
        cout << "\n\nХотите выйти?\n";//вывод данных в консоль
        while (true)//цикл проверки ввода значения типа bool в int-ой интерпретации
        {
            //условие выхода из цикла
            if (exit == 0 || exit == 1) break;
            //иначе снова вызываем функцию для ввода значения
            else exit = InputInt("\nВведите '1' для выхода и '0', чтобы запустить программу ещё раз: ");
        }
        exit = -1; number = -1; file = -1; eps = -1;//обнуляем некоторые значения переменных
    } while (exit != 1); // пока пользователь не ввел exit = 1
    return 0;//возращаем нуль
}